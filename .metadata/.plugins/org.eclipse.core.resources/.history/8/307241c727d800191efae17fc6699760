import java.util.Scanner;

/**
 * This class contains the dynamically allocated array and it's processing
 * Student Name: 
 * Student Number:  
 * Course: CST8130 - Data Structures
 * @author Linda Crane
 * @author Melissa Sienkiewicz
 *
 */

public class Numbers {
	/**
	 * Stores Float values.
	 */
	private Float [] numbers;
	/**
	 * Store the number of items currently in the array.
	 */
	
	private int numItems;
	
	/**
	 * Default Constructor
	 */
	public Numbers() {
		// TODO Write code here to initialize a "default" array since this is the default constructor
		numbers = new Float[numItems];
	}

	/**
	 * Constructor that initializes the numbers array.
	 * @param size - Max size of the numbers array
	 */
	public Numbers(int size) {
		// TODO Write code here to initialize the numbers array of max 'size'
		numbers = new Float[size];
	}
	
	/**
	 * Adds a value in the array
	 * @param keyboard - Scanner object to use for input
	 */
	public void addValue(Scanner keyboard) {
		// TODO Write code here to add the values in the array
		System.out.println("Enter value:");
		
		while(!keyboard.hasNextFloat()) {
			System.out.println("Enter value");
			float num = keyboard.nextFloat();
		}
		int len = numbers.length;
		Float[] myarray = new Float[len+1];
			for(int i=0; i< numbers.length; i++) {
				if(numbers[i]==null) {
					myarray[i]=num;
					break;
				}
				myarray[i]=numbers[i];
			}	
			
			if(numbers[numbers.length-1]!=null) {
				myarray[numbers.length+1]= num;
			}
//		}
		numbers = myarray;
	}
	
	/**
	 * Calculates the average of all the values in the numbers array.
	 * @return float value that represents the average
	 */
	public float calcAverage() {
		// TODO Write code to return the average of the values in the array
		float total = 0;
		float avg = 0;
		int i=0;
		while(numbers[i]!=null) {
			total = total + numbers[i];	
			i++;
			avg = total / (i+1);
		}	
		return avg;
	}

	@Override
	public String toString() {
		// TODO Write code for an appropriate toString method
		String newNum = "";
		int i = 0;
		if(numbers[0]==null) {
			newNum = "0.0";
		}
		while(numbers[i]!=null) {
			newNum = newNum + numbers[i].toString() + "\n";
			i++;
		}
		return newNum;
	}
	
}
